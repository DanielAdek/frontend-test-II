{"version":3,"sources":["components/Button/index.js","layouts/Home/index.js","components/InputField/index.jsx","layouts/Gif/index.js","layouts/Spotify/Artists/index.js","layouts/Spotify/RelateArtists/index.js","layouts/Spotify/index.js","layouts/Spotify/Redirector/index.js","App.js","serviceWorker.js","helpers/axiosAuth/index.js","index.js"],"names":["Button","_ref","text","react_default","a","createElement","type","Home","className","Link","to","href","components_Button","Input","changed","keyPress","onChange","onKeyPress","placeholder","secret","Gif","state","chatText","images","handleChangeEvent","event","_this","setState","target","value","handleSubmitEvent","charCode","trim","alert","axios","get","concat","then","response","data","Object","toConsumableArray","downsized","url","catch","_this2","this","style","paddingLeft","color","length","margin","map","image","i","key","src","InputField","name","Component","Spotify","artist","console","log","err","_this$state$artist","followers","genres","popularity","react","alt","total","genre","RelatedArtists","allRelatedArtists","localStorage","token","artists","slice","id","SpotifyApp","Artists","RelateArtists","SpotifyApplication","paramsString","window","location","split","params","URLSearchParams","setItem","Redirect","SimpleAppRouter","BrowserRouter","Route","exact","path","component","GiphyApp","SpotifyRedirect","Boolean","hostname","match","setAuthorizationToken","defaults","headers","common","Authorization","setAxiosHeader","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5514222.chunk.js","sourcesContent":["import React from 'react';\n\nimport './style.css';\n\nconst Button = ({ text }) => {\n    return <button type=\"button\">{text}</button>\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from '../../components/Button';\nimport { Link } from 'react-router-dom';\n\nimport './style.css';\n\nconst Home = () => {\n  return (\n    <div className=\"home-container\">\n    <header className=\"home_header\">\n      <div>GS</div>\n      <nav className=\"nav_home\">\n      <Link to=\"/giph\">Open Giph</Link>\n      <a href=\"https://accounts.spotify.com/authorize?client_id=b1e14dae5cc34f89889c195c40d1768c&scope=user-read-email%20user-top-read&response_type=token&redirect_uri=http://localhost:3000/callback\">\n        Open Spotify\n        </a>\n      </nav>\n    </header>\n      <div className=\"button-section-home\">\n        <Link to=\"/giph\">\n          <Button text=\"Open Giph\" />\n        </Link>\n        <a href=\"https://accounts.spotify.com/authorize?client_id=b1e14dae5cc34f89889c195c40d1768c&scope=user-read-email%20user-top-read&response_type=token&redirect_uri=http://localhost:3000/callback\">\n          <Button text=\"Open Spotify\" />\n        </a>\n      </div>\n      <footer>\n        <p>Daniel Adekunle GS App &copy; 2018</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nconst Input = ({ type, changed, className, keyPress }) => {\n    return (\n        <input \n            type={type} \n            onChange={changed}\n            className={className}\n            onKeyPress={keyPress}\n            placeholder=\"Enter text here!\"\n            />\n    )\n}\n\nexport default Input;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Input from '../../components/InputField';\n\nimport './style.css';\n\nconst secret = '3E2QnYk4YDxxNfYiDdz2Y610pLIyBHhz';\n\nclass Gif extends Component {\n  state = {\n    chatText: '',\n    images: []\n  }\n\n  handleChangeEvent = (event) => {\n    this.setState({\n      chatText: event.target.value\n    })\n  }\n\n  handleSubmitEvent = (event) => {\n    if (event.charCode === 13) {\n      if (event.target.value.trim() === '') {\n        alert('Please enter a text');\n      } else {\n        event.target.value = '';\n        axios.get(`http://api.giphy.com/v1/gifs/search?api_key=${secret}&q=${this.state.chatText}&limit=${1}`)\n          .then(response => {\n            const data = response.data.data[0];\n            this.setState({ images: [...this.state.images, data.images.downsized.url] })\n          }).catch(() => {\n            alert('No Gif Found!');\n          })\n      }\n    }\n  }\n\n  render() {\n    const { chatText } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"header\" >\n          <h3 style={{ paddingLeft: '10px', color: 'white' }}>Gif pics</h3>\n          <div className=\"nav\">\n            <Link className=\"navlink\" to=\"/\" >Home</Link>\n            <Link className=\"navlink\" to=\"/spotify\" >Spotify</Link>\n          </div>\n        </div>\n        <div className=\"screen\">\n          {this.state.images.length < 1 ? <h4>\n            <i style={{margin: '0 5px'}} className=\"fas fa-pencil-alt\"></i>\n            Enter text in the input below!</h4> :\n            this.state.images.map((image, i) =>\n            <div key={i}>\n              <img\n                src={`${image}`}\n                className=\"gifImage\"\n              />\n            </div>\n          )}\n        </div>\n        <Input\n          className=\"text-area\"\n          type=\"text\"\n          name=\"chatText\"\n          value={chatText}\n          changed={(event) => this.handleChangeEvent(event)}\n          keyPress={this.handleSubmitEvent}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Gif;\n","import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\n\nimport './style.css';\nclass Spotify extends Component {\n\n  state = {\n    artist: '',\n  };\n  componentDidMount() {\n    console.log('artist are commig on there way');\n\n    axios.get(`https://api.spotify.com/v1/artists/2JGLjTHV2t8u8wxmLaiFfe`)\n    .then(response => {\n      console.log(response.data);\n      this.setState({ artist: response.data })\n    })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const { followers, genres, images, name, popularity} = this.state.artist;\n    return (\n      <Fragment>  \n        {\n          !this.state.artist ? 'loading.....' :\n            <div className=\"artist\">\n              <div className=\"artist_image_section\">\n                <img className=\"image_artist\" src={images[0].url} alt={name} />\n              </div>\n              <div className=\"artist_stat\">\n                <ul>\n                  <li className=\"artist_name\">Artist: {name} </li>\n                  <li className=\"artist_followers\"><i className=\"fa fa-user\" />Followers: {followers.total}</li>\n                  <li className=\"artist_name\">Popularity: {popularity} </li>\n                  <li className=\"artist_genres\">\n                    {\n                      genres.map((genre, i) => <div key={i} >{genre}</div>)\n                    }\n                  </li>\n                </ul>\n              </div>\n            </div>\n        }\n      </Fragment>\n    )\n  }\n}\n\nexport default Spotify;","\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './style.css';\nclass RelatedArtists extends Component {\n\n  state = {\n    allRelatedArtists: '',\n  };\n\n  componentDidMount() {\n    const { token } = localStorage;\n\n    axios.get(`https://api.spotify.com/v1/artists/2JGLjTHV2t8u8wxmLaiFfe/related-artists`)\n      .then(response => {\n        console.log(response.data.artists.slice(-1, 10));\n        this.setState({ allRelatedArtists: response.data.artists.slice(0, 10) })\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"related_artists\">\n        <div className=\"header header_related_artist\"> Related Artists </div>\n        {\n          !this.state.allRelatedArtists ? 'loading....' :\n            this.state.allRelatedArtists.map(artist => {\n              const { name, images, id, followers, type, popularity } = artist;\n              return (\n                <div className=\"artist_related_section\" key={id} >\n                  <div className=\"artist_related_photo\">\n                    <img className=\"images_related_artists\" src={images[0].url} alt={name} />\n                  </div>\n                  <div className=\"artist_related_stat\">\n                    <ul>\n                      <li className=\"artist_related_name\">{type}: {name} </li>\n                      <li className=\"followers_number\">Followers: {followers.total}</li>\n                      <li className=\"popular\"> Popularity: {popularity}</li>\n                      <li className=\"genres\">\n                       <a href=\"#\">View Songs</a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              );\n            })\n        }\n      </div>\n    );\n  }\n}\n\nexport default RelatedArtists;","import { Link } from 'react-router-dom';\nimport React, {Fragment} from 'react';\nimport Artists from './Artists';\nimport RelateArtists from './RelateArtists';\n\nimport './style.css'\nconst SpotifyApp = () => {\n    return (\n        <Fragment>\n        <Link to='/' className=\"back\">back</Link>\n        <div className=\"container_artists\">\n            <Artists />\n            <RelateArtists />\n        </div>\n        </Fragment>\n    )\n}\n\n\nexport default SpotifyApp;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst SpotifyApplication = () => {\n    const paramsString = window.location.href.split('#')[1];\n    const params = new URLSearchParams(paramsString);\n\n    localStorage.setItem('token', params.get('access_token'));\n    localStorage.setItem('expiresIn', params.get('expires_in',));\n    localStorage.setItem('authUser', true);\n\n    return (\n      <Redirect to='/spotify' />\n    );\n}\n\nexport default SpotifyApplication;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './layouts/Home';\nimport GiphyApp from './layouts/Gif';\nimport Spotify from './layouts/Spotify/index'\nimport SpotifyRedirect from './layouts/Spotify/Redirector';\n\nimport './App.css';\n\nclass SimpleAppRouter extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={ Home } />\n          <Route exact path=\"/spotify\" component={ Spotify } />\n          <Route exact path=\"/giph\" component={ GiphyApp } />\n          <Route exact path=\"/callback\" component={ SpotifyRedirect } />\n        </div>\n    </Router>\n    );\n  }\n}\n\nexport default SimpleAppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n/**\n * @description - set token to request headers\n *\n * @param {string} token - Default application state\n *\n * @returns {void} no return or void\n */\nconst setAuthorizationToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common.Authorization;\n  }\n};\nexport default setAuthorizationToken;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport setAxiosHeader from './helpers/axiosAuth';\n\nif (localStorage.token) {\n    setAxiosHeader(localStorage.token);\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}